
==================== FINAL INTERFACE ====================
2018-01-20 19:31:10.298467 UTC

interface main:Renderer 8022
  interface hash: 1eae0dabeff38750e2f246f76ceb98db
  ABI hash: 75d402eb2bdc75998b543608f65b964d
  export-list hash: d0a8aaa82260f1a75c30619711d10246
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 1c6f65d52f53d3e6bedf9b8d55a3afa1
  sig of: Nothing
  used TH splices: False
  where
exports:
  Renderer.posToPixelCord
  Renderer.render
module dependencies: GameSettings GameState
package dependencies: GLURaw-2.0.0.3 GLUT-2.7.0.12
                      ObjectName-1.1.0.1 OpenGL-3.0.2.0 OpenGLRaw-3.2.7.0
                      StateVar-1.1.0.4 array-0.5.2.0 base-4.10.1.0 binary-0.8.5.1
                      bmp-1.2.6.3 bytestring-0.10.8.2 containers-0.5.10.2 deepseq-1.4.3.0
                      fixed-0.2.1.1 ghc-prim-0.5.1.1 gloss-1.11.1.1
                      gloss-rendering-1.11.1.1 half-0.2.2.3 integer-gmp-1.0.1.0
                      stm-2.4.4.1 text-1.2.2.2
orphans: gloss-rendering-1.11.1.1:Graphics.Gloss.Internals.Data.Picture
         stm-2.4.4.1:Control.Monad.STM text-1.2.2.2:Data.Text
         binary-0.8.5.1:Data.Binary.Generic text-1.2.2.2:Data.Text.Show
         bytestring-0.10.8.2:Data.ByteString.Builder base-4.10.1.0:GHC.Float
         base-4.10.1.0:GHC.Base
family instance modules: base-4.10.1.0:Control.Applicative
                         base-4.10.1.0:Data.Complex base-4.10.1.0:Data.Either
                         base-4.10.1.0:Data.Functor.Compose base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity
                         base-4.10.1.0:Data.Functor.Product base-4.10.1.0:Data.Functor.Sum
                         base-4.10.1.0:Data.List.NonEmpty base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Semigroup base-4.10.1.0:Data.Type.Equality
                         base-4.10.1.0:Data.Version base-4.10.1.0:Data.Void
                         base-4.10.1.0:GHC.Exts base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats containers-0.5.10.2:Data.IntMap.Internal
                         containers-0.5.10.2:Data.IntSet.Internal
                         containers-0.5.10.2:Data.Map.Internal
                         containers-0.5.10.2:Data.Sequence.Internal
                         containers-0.5.10.2:Data.Set.Internal containers-0.5.10.2:Data.Tree
                         text-1.2.2.2:Data.Text
import  -/  base-4.10.1.0:GHC.Base 782fd99b5e36f3698a26179a49afca64
import  -/  base-4.10.1.0:GHC.Num 6e1dc5d36d99a802edb39b92bb1923b8
import  -/  base-4.10.1.0:GHC.Real 3c62834bc25e762eabc44149c4cc142d
import  -/  base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
import  -/  gloss-1.11.1.1:Graphics.Gloss 42927f6b8c3c9969ac9a5d586179f98b
import  -/  gloss-1.11.1.1:Graphics.Gloss.Data.Picture bd23f879edf35d61a970a4674d345577
import  -/  gloss-rendering-1.11.1.1:Graphics.Gloss.Internals.Data.Color 67e41f501ac28fdfb0b383296bc15e4c
import  -/  gloss-rendering-1.11.1.1:Graphics.Gloss.Internals.Data.Picture 44e3080be4942669c6c3efda5283b96a
import  -/  GameSettings 1b0570c44b4f750e285f2e8693289042
  exports: 9ae63ff9e2178c0419c37c6f14559068
  appleColor f4bf5b25af02fd475f8200b9a8d147db
  sizeOfTile 73dfbe4eb744b0fcbc9df0736581bcef
  snakeColor c8cd7e0f91ece385c20f3ee6b5e5dbab
import  -/  GameState 113268a48c3e06c15982ed972953165b
  exports: 46e397366e2691425921ce5dcc3899c0
  GameState 4ac8d945e93e405b94c13340932266e0
  Position 9b66e2b9ae1f48a2fc148b75d149bea2
  applePos 4ac8d945e93e405b94c13340932266e0
  snakeBody 4ac8d945e93e405b94c13340932266e0
0e2832ebeda36b318c9904793a21195d
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Renderer.$trModule3
                   Renderer.$trModule1) -}
1d40db344231786ff17e9b7ad9e8159a
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Renderer.$trModule2) -}
e9be862cb33317f06e572e42e6c46b3e
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Renderer"#) -}
e29bdf84f3996480183357d54b57cbe7
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Renderer.$trModule4) -}
7c072f779f4bf5efbfe0294e3e0a4719
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
5d5a33640aef179dfb2c1d35147e2b57
  $wrender ::
    GameState.GameState
    -> (# [Graphics.Gloss.Internals.Data.Picture.Picture] #)
  {- Arity: 1, Strictness: <L,1*U(1*U,1*U(1*U(U),1*U(U)),A,A)>,
     Inline: [0],
     Unfolding: (\ (w :: GameState.GameState) ->
                 (# case w of wild { GameState.Game ds1 ds2 ds3 ds4 ->
                    let {
                      z :: Graphics.Gloss.Internals.Data.Picture.Picture
                      = case ds2 of wild1 { (,) x y ->
                        Graphics.Gloss.Internals.Data.Picture.Translate
                          (case x of wild2 { GHC.Types.I# x1 ->
                           GHC.Types.F# (GHC.Prim.int2Float# (GHC.Prim.*# x1 16#)) })
                          (case y of wild2 { GHC.Types.I# x1 ->
                           GHC.Types.F# (GHC.Prim.int2Float# (GHC.Prim.*# x1 16#)) })
                          Renderer.render2 }
                    } in
                    let {
                      z1 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
                      = GHC.Types.:
                          @ Graphics.Gloss.Internals.Data.Picture.Picture
                          z
                          (GHC.Types.[] @ Graphics.Gloss.Internals.Data.Picture.Picture)
                    } in
                    letrec {
                      go :: [(GHC.Types.Int, GHC.Types.Int)]
                            -> [Graphics.Gloss.Internals.Data.Picture.Picture]
                        {- Arity: 1, Strictness: <S,1*U> -}
                      = \ (ds :: [(GHC.Types.Int, GHC.Types.Int)]) ->
                        case ds of wild1 {
                          [] -> z1
                          : y ys
                          -> GHC.Types.:
                               @ Graphics.Gloss.Internals.Data.Picture.Picture
                               (case y of wild2 { (,) x y1 ->
                                Graphics.Gloss.Internals.Data.Picture.Translate
                                  (case x of wild3 { GHC.Types.I# x1 ->
                                   GHC.Types.F# (GHC.Prim.int2Float# (GHC.Prim.*# x1 16#)) })
                                  (case y1 of wild3 { GHC.Types.I# x1 ->
                                   GHC.Types.F# (GHC.Prim.int2Float# (GHC.Prim.*# x1 16#)) })
                                  Renderer.render1 })
                               (go ys) }
                    } in
                    go ds1 } #)) -}
cb60345d8314acba20f2c36fefa1a934
  posToPixelCord ::
    Graphics.Gloss.Internals.Data.Color.Color
    -> GameState.Position
    -> Graphics.Gloss.Internals.Data.Picture.Picture
  {- Arity: 2, Strictness: <L,U><S,1*U(1*U(U),1*U(U))>m11,
     Unfolding: InlineRule (2, True, False)
                (\ (col :: Graphics.Gloss.Internals.Data.Color.Color)
                   (ds :: (GHC.Types.Int, GHC.Types.Int)) ->
                 case ds of wild { (,) x y ->
                 Graphics.Gloss.Internals.Data.Picture.Translate
                   (case x of wild1 { GHC.Types.I# x1 ->
                    GHC.Types.F# (GHC.Prim.int2Float# (GHC.Prim.*# x1 16#)) })
                   (case y of wild1 { GHC.Types.I# x1 ->
                    GHC.Types.F# (GHC.Prim.int2Float# (GHC.Prim.*# x1 16#)) })
                   (Graphics.Gloss.Internals.Data.Picture.Color
                      col
                      Renderer.posToPixelCord1) }) -}
ba8d327a77571f2f68709718026970e5
  posToPixelCord1 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Strictness: m2,
     Unfolding: (Graphics.Gloss.Internals.Data.Picture.Polygon
                   Renderer.posToPixelCord2) -}
7e6b7a50a1250edbd87ae124ce26b1fe
  posToPixelCord2 :: Graphics.Gloss.Internals.Data.Picture.Path
  {- Unfolding: (case Graphics.Gloss.Data.Picture.$wrectanglePath
                        Renderer.posToPixelCord3
                        Renderer.posToPixelCord3 of ww { (#,#) ww1 ww2 ->
                 GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Picture.Point
                   ww1
                   ww2 }) -}
f457b3916d9e9105079eed92ce09af6b
  posToPixelCord3 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 16.0#) -}
1114ddbfc74bafad818776389d142ad9
  render ::
    GameState.GameState
    -> Graphics.Gloss.Internals.Data.Picture.Picture
  {- Arity: 1, Strictness: <L,1*U(1*U,1*U(1*U(U),1*U(U)),A,A)>m14,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GameState.GameState) ->
                 case Renderer.$wrender w of ww { Unit# ww1 ->
                 Graphics.Gloss.Internals.Data.Picture.Pictures ww1 }) -}
d415d36687ec5962fa9e7c05fd44d19e
  render1 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Strictness: m10,
     Unfolding: (Graphics.Gloss.Internals.Data.Picture.Color
                   Graphics.Gloss.Data.Color.black
                   Renderer.posToPixelCord1) -}
4fb1a358dff90b1bb4712f2d6b4309ff
  render2 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Strictness: m10,
     Unfolding: (Graphics.Gloss.Internals.Data.Picture.Color
                   Graphics.Gloss.Data.Color.red
                   Renderer.posToPixelCord1) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

