
==================== FINAL INTERFACE ====================
2018-01-23 14:38:07.750769 UTC

interface main:EventSystem 8022
  interface hash: 790dcc70d01d77e49b363d5298ca7acb
  ABI hash: 37847a00000f0a4a0ab7b32fff13cf03
  export-list hash: ee58c842ddc0dfe8f17cb3aa7f43ea8e
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 1c6f65d52f53d3e6bedf9b8d55a3afa1
  sig of: Nothing
  used TH splices: False
  where
exports:
  EventSystem.handleKeys
module dependencies: GameState
package dependencies: GLURaw-2.0.0.3 GLUT-2.7.0.12
                      ObjectName-1.1.0.1 OpenGL-3.0.2.0 OpenGLRaw-3.2.7.0
                      StateVar-1.1.0.4 array-0.5.2.0 base-4.10.1.0 binary-0.8.5.1
                      bmp-1.2.6.3 bytestring-0.10.8.2 containers-0.5.10.2 deepseq-1.4.3.0
                      fixed-0.2.1.1 ghc-prim-0.5.1.1 gloss-1.11.1.1
                      gloss-rendering-1.11.1.1 half-0.2.2.3 integer-gmp-1.0.1.0
                      stm-2.4.4.1 text-1.2.2.2
orphans: gloss-rendering-1.11.1.1:Graphics.Gloss.Internals.Data.Picture
         stm-2.4.4.1:Control.Monad.STM text-1.2.2.2:Data.Text
         binary-0.8.5.1:Data.Binary.Generic text-1.2.2.2:Data.Text.Show
         bytestring-0.10.8.2:Data.ByteString.Builder base-4.10.1.0:GHC.Float
         base-4.10.1.0:GHC.Base
family instance modules: base-4.10.1.0:Control.Applicative
                         base-4.10.1.0:Data.Complex base-4.10.1.0:Data.Either
                         base-4.10.1.0:Data.Functor.Compose base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity
                         base-4.10.1.0:Data.Functor.Product base-4.10.1.0:Data.Functor.Sum
                         base-4.10.1.0:Data.List.NonEmpty base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Semigroup base-4.10.1.0:Data.Type.Equality
                         base-4.10.1.0:Data.Version base-4.10.1.0:Data.Void
                         base-4.10.1.0:GHC.Exts base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats containers-0.5.10.2:Data.IntMap.Internal
                         containers-0.5.10.2:Data.IntSet.Internal
                         containers-0.5.10.2:Data.Map.Internal
                         containers-0.5.10.2:Data.Sequence.Internal
                         containers-0.5.10.2:Data.Set.Internal containers-0.5.10.2:Data.Tree
                         text-1.2.2.2:Data.Text
import  -/  base-4.10.1.0:GHC.Num 6e1dc5d36d99a802edb39b92bb1923b8
import  -/  base-4.10.1.0:GHC.Real 3c62834bc25e762eabc44149c4cc142d
import  -/  base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
import  -/  ghc-prim-0.5.1.1:GHC.Classes 93e2660065dce9329577e83d76d8f0d4
import  -/  gloss-1.11.1.1:Graphics.Gloss.Interface.IO.Game 4df1659e96e880a956d4a1857412cb31
import  -/  gloss-1.11.1.1:Graphics.Gloss.Internals.Interface.Backend.Types e9f36772aaa47b9123c9f37541e37a9b
import  -/  gloss-1.11.1.1:Graphics.Gloss.Internals.Interface.Event 1fe8034af0bd96eeb41f9dff74e936cf
import  -/  GameState 8acd50b608ce6b3d98f8794a54aa4079
  exports: c8cecce746904f3520e2c67cee428f1f
  Down 4377854ddbe67d1e54162ad32a574fac
  GameState 1387295e6596f0d70fba3d2d2f446eff
  Left 1c84d1d8f4d686ff62f685959c4f34dd
  Right 67d7d59836ee3d0a3e33a6f25d911003
  Up c9f957651585ced0f8adf481f4b4b919
  changeOfOrientation 1387295e6596f0d70fba3d2d2f446eff
  initialGameState c47c58f20e827568559e18c00017ce6f
  orientation 1387295e6596f0d70fba3d2d2f446eff
  orientationToInt a0a973624073b0dd180c0b914aa48c9f
f7719f52e0242192f0084f60bb918a2e
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   EventSystem.$trModule3
                   EventSystem.$trModule1) -}
36ebd26a173804655c5e9e2d5ecdb2ed
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS EventSystem.$trModule2) -}
dec6d414130d8ecee6bd8102ca1251d3
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("EventSystem"#) -}
dd9643ecfdb0f5173742ebf35317576d
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS EventSystem.$trModule4) -}
7407e50ad74684ac246fcfec2e7fcaf8
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
46d3d887383c58f6e6019341309d46e0
  handleKeys ::
    Graphics.Gloss.Internals.Interface.Event.Event
    -> GameState.GameState -> GameState.GameState
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U(U,U,U,U,U,U)>,
     Unfolding: (\ (ds :: Graphics.Gloss.Internals.Interface.Event.Event)
                   (state :: GameState.GameState) ->
                 case ds of wild {
                   DEFAULT -> state
                   Graphics.Gloss.Internals.Interface.Event.EventKey ds1 ds2 ds3 ds4
                   -> case ds1 of wild1 {
                        DEFAULT -> state
                        Graphics.Gloss.Internals.Interface.Backend.Types.Char ds5
                        -> case ds5 of wild2 { GHC.Types.C# ds6 ->
                           case ds6 of ds7 {
                             DEFAULT -> state
                             'a'#
                             -> case ds2 of wild3 {
                                  Graphics.Gloss.Internals.Interface.Backend.Types.Down
                                  -> case state of wild4 { GameState.Game ds8 ds9 ds10 ds11 ds12 ds13 ->
                                     case ds10 of wild5 {
                                       DEFAULT
                                       -> case ds13 of wild6 {
                                            GHC.Types.False
                                            -> GameState.Game
                                                 ds8
                                                 ds9
                                                 GameState.Left
                                                 ds11
                                                 ds12
                                                 GHC.Types.True
                                            GHC.Types.True -> wild4 }
                                       GameState.Right -> wild4
                                       GameState.Left -> wild4 } }
                                  Graphics.Gloss.Internals.Interface.Backend.Types.Up -> state }
                             'd'#
                             -> case ds2 of wild3 {
                                  Graphics.Gloss.Internals.Interface.Backend.Types.Down
                                  -> case state of wild4 { GameState.Game ds8 ds9 ds10 ds11 ds12 ds13 ->
                                     case ds10 of wild5 {
                                       DEFAULT
                                       -> case ds13 of wild6 {
                                            GHC.Types.False
                                            -> GameState.Game
                                                 ds8
                                                 ds9
                                                 GameState.Right
                                                 ds11
                                                 ds12
                                                 GHC.Types.True
                                            GHC.Types.True -> wild4 }
                                       GameState.Right -> wild4
                                       GameState.Left -> wild4 } }
                                  Graphics.Gloss.Internals.Interface.Backend.Types.Up -> state }
                             'r'#
                             -> case ds2 of wild3 {
                                  Graphics.Gloss.Internals.Interface.Backend.Types.Down
                                  -> GameState.initialGameState
                                  Graphics.Gloss.Internals.Interface.Backend.Types.Up -> state }
                             's'#
                             -> case ds2 of wild3 {
                                  Graphics.Gloss.Internals.Interface.Backend.Types.Down
                                  -> case state of wild4 { GameState.Game ds8 ds9 ds10 ds11 ds12 ds13 ->
                                     case ds10 of wild5 {
                                       DEFAULT -> wild4
                                       GameState.Right
                                       -> case ds13 of wild6 {
                                            GHC.Types.False
                                            -> GameState.Game
                                                 ds8
                                                 ds9
                                                 GameState.Down
                                                 ds11
                                                 ds12
                                                 GHC.Types.True
                                            GHC.Types.True -> wild4 }
                                       GameState.Left
                                       -> case ds13 of wild6 {
                                            GHC.Types.False
                                            -> GameState.Game
                                                 ds8
                                                 ds9
                                                 GameState.Down
                                                 ds11
                                                 ds12
                                                 GHC.Types.True
                                            GHC.Types.True -> wild4 } } }
                                  Graphics.Gloss.Internals.Interface.Backend.Types.Up -> state }
                             'w'#
                             -> case ds2 of wild3 {
                                  Graphics.Gloss.Internals.Interface.Backend.Types.Down
                                  -> case state of wild4 { GameState.Game ds8 ds9 ds10 ds11 ds12 ds13 ->
                                     case ds10 of wild5 {
                                       DEFAULT -> wild4
                                       GameState.Right
                                       -> case ds13 of wild6 {
                                            GHC.Types.False
                                            -> GameState.Game
                                                 ds8
                                                 ds9
                                                 GameState.Up
                                                 ds11
                                                 ds12
                                                 GHC.Types.True
                                            GHC.Types.True -> wild4 }
                                       GameState.Left
                                       -> case ds13 of wild6 {
                                            GHC.Types.False
                                            -> GameState.Game
                                                 ds8
                                                 ds9
                                                 GameState.Up
                                                 ds11
                                                 ds12
                                                 GHC.Types.True
                                            GHC.Types.True -> wild4 } } }
                                  Graphics.Gloss.Internals.Interface.Backend.Types.Up
                                  -> state } } } } }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

