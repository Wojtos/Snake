
==================== FINAL INTERFACE ====================
2018-01-20 21:05:27.79158 UTC

interface main:Main 8022
  interface hash: e1c66a14b0dca3a19166fcedcf04f818
  ABI hash: b853b6bd6be83e573cadfb6628dc25c8
  export-list hash: 0c6dd57704519eb66bc2e35415b75158
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 8ba87647430bd4dec4a8dfcbbc06ed1d
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
  Main.playSnake
module dependencies: GameSettings GameState Renderer UpdateGame
package dependencies: GLURaw-2.0.0.3 GLUT-2.7.0.12
                      ObjectName-1.1.0.1 OpenGL-3.0.2.0 OpenGLRaw-3.2.7.0
                      StateVar-1.1.0.4 array-0.5.2.0 base-4.10.1.0 binary-0.8.5.1
                      bmp-1.2.6.3 bytestring-0.10.8.2 containers-0.5.10.2 deepseq-1.4.3.0
                      fixed-0.2.1.1 ghc-prim-0.5.1.1 gloss-1.11.1.1
                      gloss-rendering-1.11.1.1 half-0.2.2.3 integer-gmp-1.0.1.0
                      stm-2.4.4.1 text-1.2.2.2
orphans: gloss-rendering-1.11.1.1:Graphics.Gloss.Internals.Data.Picture
         stm-2.4.4.1:Control.Monad.STM text-1.2.2.2:Data.Text
         binary-0.8.5.1:Data.Binary.Generic text-1.2.2.2:Data.Text.Show
         bytestring-0.10.8.2:Data.ByteString.Builder base-4.10.1.0:GHC.Float
         base-4.10.1.0:GHC.Base
family instance modules: base-4.10.1.0:Control.Applicative
                         base-4.10.1.0:Data.Complex base-4.10.1.0:Data.Either
                         base-4.10.1.0:Data.Functor.Compose base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity
                         base-4.10.1.0:Data.Functor.Product base-4.10.1.0:Data.Functor.Sum
                         base-4.10.1.0:Data.List.NonEmpty base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Semigroup base-4.10.1.0:Data.Type.Equality
                         base-4.10.1.0:Data.Version base-4.10.1.0:Data.Void
                         base-4.10.1.0:GHC.Exts base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats containers-0.5.10.2:Data.IntMap.Internal
                         containers-0.5.10.2:Data.IntSet.Internal
                         containers-0.5.10.2:Data.Map.Internal
                         containers-0.5.10.2:Data.Sequence.Internal
                         containers-0.5.10.2:Data.Set.Internal containers-0.5.10.2:Data.Tree
                         text-1.2.2.2:Data.Text
import  -/  base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
import  -/  ghc-prim-0.5.1.1:GHC.Types b1fd0716441595db508c1a74387bf394
import  -/  gloss-1.11.1.1:Graphics.Gloss 42927f6b8c3c9969ac9a5d586179f98b
import  -/  gloss-1.11.1.1:Graphics.Gloss.Data.Color ad515478ea5e275b408a466a82dd64bd
import  -/  gloss-1.11.1.1:Graphics.Gloss.Data.Display 0584c981ac46d2974e92544e0b9edf2c
import  -/  gloss-1.11.1.1:Graphics.Gloss.Data.ViewPort e3a26d6e96e6a33b79cbc9b4d07171f7
import  -/  gloss-1.11.1.1:Graphics.Gloss.Interface.Pure.Simulate c9cea3322237f9f49dbda83dcb10d2e7
import  -/  GameState f55de4d8fd383a980a004bc8ebc8a8c7
  exports: b040005083cbdb0c0a388c6a155d3345
  initialGameState 2ef5b4a2fc24d339c35d065135265708
import  -/  Renderer 75d402eb2bdc75998b543608f65b964d
  exports: d0a8aaa82260f1a75c30619711d10246
  render 1114ddbfc74bafad818776389d142ad9
import  -/  UpdateGame 075c130236d6c45636638aaf6b7bb22d
  exports: 5a88084840f97dd8865523048154b407
  update 7ff7c1fc069a6da298792bd0560d8a3c
9d72b2fddb818bcd8919052935e0f1f3
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
3108ceeaf5a318be844de422b45de9d8
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
33bd129667974f0a0ba4a893af79107d
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
dbd4548e9b36de89da495e13677712b6
  $wplaySnake ::
    GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U><S,U>, Inline: [0],
     Unfolding: (\ (w :: GHC.Types.Int)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Graphics.Gloss.Internals.Interface.Simulate.simulateWithBackendIO1
                        @ GameState.GameState
                        @ Graphics.Gloss.Internals.Interface.Backend.GLUT.GLUTState
                        Graphics.Gloss.Internals.Interface.Backend.GLUT.$fBackendGLUTState
                        Graphics.Gloss.Internals.Interface.Backend.GLUT.glutStateInit
                        (Graphics.Gloss.Data.Display.InWindow
                           Main.main10
                           (w, w)
                           Main.main6)
                        Graphics.Gloss.Data.Color.white
                        Main.main4
                        GameState.initialGameState
                        Main.main3
                          `cast`
                        (<GameState.GameState>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Graphics.Gloss.Internals.Data.Picture.Picture>_R))
                        Main.main2
                          `cast`
                        (<Graphics.Gloss.Data.ViewPort.ViewPort>_R
                         ->_R <GHC.Types.Float>_R
                         ->_R <GameState.GameState>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GameState.GameState>_R))
                        w1 of ds1 { (#,#) ipv ipv1 ->
                 (# ipv, GHC.Tuple.() #) }) -}
571cdd45854636fed053962798a7007e
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
a362d8c1ebc8c94a68329fe87a089f04
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Graphics.Gloss.Internals.Interface.Simulate.simulateWithBackendIO1
                        @ GameState.GameState
                        @ Graphics.Gloss.Internals.Interface.Backend.GLUT.GLUTState
                        Graphics.Gloss.Internals.Interface.Backend.GLUT.$fBackendGLUTState
                        Graphics.Gloss.Internals.Interface.Backend.GLUT.glutStateInit
                        Main.main5
                        Graphics.Gloss.Data.Color.white
                        Main.main4
                        GameState.initialGameState
                        Main.main3
                          `cast`
                        (<GameState.GameState>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Graphics.Gloss.Internals.Data.Picture.Picture>_R))
                        Main.main2
                          `cast`
                        (<Graphics.Gloss.Data.ViewPort.ViewPort>_R
                         ->_R <GHC.Types.Float>_R
                         ->_R <GameState.GameState>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GameState.GameState>_R))
                        s of ds1 { (#,#) ipv ipv1 ->
                 (# ipv, GHC.Tuple.() #) }) -}
dd81c58984a2edc8204def1a389d1fac
  main10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main11) -}
86179a30ba9d225023745b35cef768b7
  main11 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Snake"#) -}
894b6479ccfab6e4f1560d344b6d0d93
  main12 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
f7a6cb1f851f8319311eddd666964d24
  main2 ::
    Graphics.Gloss.Data.ViewPort.ViewPort
    -> GHC.Types.Float
    -> GameState.GameState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GameState.GameState #)
  {- Arity: 4,
     Strictness: <L,A><L,A><L,U(U,U(U(U),U(U)),U,U(U))><S,U>,
     Unfolding: InlineRule (4, True, False)
                (\ (view :: Graphics.Gloss.Data.ViewPort.ViewPort)
                   (time :: GHC.Types.Float)[OneShot]
                   (model1 :: GameState.GameState)[OneShot]
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s1, UpdateGame.update view time model1 #)) -}
652256bee95997335419b5370e3d872c
  main3 ::
    GameState.GameState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.Gloss.Internals.Data.Picture.Picture #)
  {- Arity: 2, Strictness: <L,1*U(1*U,1*U(1*U(U),1*U(U)),A,A)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: GameState.GameState)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s1, Renderer.render x #)) -}
a18f62f37942016174309aa37b0afd33
  main4 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 4#) -}
57e52e14b57cce106f8298e0a6f7dec2
  main5 :: Graphics.Gloss.Data.Display.Display
  {- Strictness: m1,
     Unfolding: (Graphics.Gloss.Data.Display.InWindow
                   Main.main10
                   Main.main8
                   Main.main6) -}
87a7631b979996ebda0ea3ea2f6eb083
  main6 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Main.main7, Main.main7)) -}
4fc9d0ad507f4f38dfc486f788f4a1b1
  main7 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
0b318dc068dde3c951b3c9f90b24445c
  main8 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Main.main9, Main.main9)) -}
3ab90bae283988e9553ce05aeaec86d3
  main9 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 272#) -}
dd02282c60087fbbda48a64ec6e62787
  playSnake :: GHC.Types.Int -> GHC.Types.Int -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,U><L,A><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.playSnake1
                  `cast`
                (<GHC.Types.Int>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
5bd06d9a4f24b405693959d2922fba2c
  playSnake1 ::
    GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U><L,A><S,U>, Inline: [0],
     Unfolding: InlineRule (3, True, True)
                (\ (w :: GHC.Types.Int)
                   (w1 :: GHC.Types.Int)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Main.$wplaySnake w w2) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

